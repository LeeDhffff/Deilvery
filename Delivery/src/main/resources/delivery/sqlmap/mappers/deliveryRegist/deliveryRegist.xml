<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="delivery.B_delivery.service.impl.DeliveryRegistMapper">
	
	
	<!-- ************************** 회원파트 start!! ******************************** -->
	
	<!-- 접속한 member 정보 가져오기 -->
	<select id="memInfoList" parameterType="hashmap" resultType="hashmap">
		/* memInfoList */
		SELECT
			MEM_ID AS memId
			,NAME AS memNm
			,LEVEL AS memLv
		FROM member
		WHERE MEM_ID = #{memId};		
	</select>
	
	
	
	
	<!-- ************************** 회원파트 start!! ******************************** -->
	
	<!-- 회원 배송신청 등록 -->
	<insert id="userDelRegist" parameterType="hashmap">
		/* userDelRegist */
		INSERT INTO application(
			IN_KEY
			,MEM_ID
			,TYPE
			,REC_NM
			,REC_PHONE
			,REC_TARGET
			,REC_ADDR
			,REC_HOU
			,REC_TXT
			,GOO_COORDINATE
			,CRE_DAY
			,ARR_DAY
			,CHK
			,PASSWORD
		) VALUES (
			#{inKey}
			,#{memId}
			,#{type}
			,#{recNm}
			,#{recPhone}
			,#{recTarget}
			,#{recAddr}
			,#{recHou}
			,#{recTxt}
			,#{gooCoordinate}
			,#{creDay}
			,#{arrDay}
			,'N'
			,#{password}
		);
	</insert>
	
	
	
	
	
	
	<!-- ************************** 관리자파트 start!! ******************************** -->
	
	<!-- 미완료 배송건 조회 -->
	<select id="ingDeliveryRead" parameterType="hashmap" resultType="hashmap">
		/* ingDeliveryRead */
		SELECT 
			IN_KEY AS inKey
			,MEM_ID AS memId
			,TYPE AS type
			,REC_NM AS recNm
			,REC_PHONE AS recPhone
			,REC_TARGET AS recTarget
			,REC_ADDR AS recAddr
			,REC_HOU AS recHou
			,REC_TXT AS recTxt
			,GOO_COORDINATE AS gooCoordinate
			,CRE_DAY AS creDay
			,ARR_DAY AS arrDay
			,CHK AS chk
			,PASSWORD AS password
		FROM application
		WHERE IN_KEY = #{inKey};
	</select>
	
	<!-- 출항일 조회 -->
	<select id="outDayList" parameterType="hashmap" resultType="hashmap">
		/* outDayList */
		SELECT 
			OUT_KEY AS outKey
			,OUT_DAY AS outDay
			,OUT_TXT AS outTxt
		FROM out_day;
	</select>
	
	<!-- 택배사 조회 -->
	<select id="shipComList" parameterType="hashmap" resultType="hashmap">
		/* shipComList */
		SELECT 
			TARGET AS target
			,T_NAME AS tName
		FROM delivery_company
		WHERE USEAGE = 'Y';
	</select>
	
	<!-- 박스정보 가져오기 -->
	<select id="packInfoList" parameterType="hashmap" resultType="hashmap">
		/* packInfoList */
		SELECT
			SJ_KEY AS sjKey
			,IN_KEY AS inKey
			,WIDTH AS width
			,LENGTH AS length
			,HEIGHT AS height
			,WEIGHT AS weight
			,COST AS cost
			,OUT_KEY AS outKey
			,SN AS sn
		FROM sj_num
		WHERE IN_KEY = #{inKey}
		ORDER BY CAST(SUBSTR(SJ_KEY, 13) AS INTEGER) DESC
	</select>
	
	
	<!-- 관리자 배송신청 등록 -->
	<insert id="adminDelRegist" parameterType="hashmap">
		/* adminDelRegist */
		INSERT INTO application(
			IN_KEY
			,MEM_ID
			,TYPE
			,REC_NM
			,REC_PHONE
			,REC_TARGET
			,REC_ADDR
			,REC_HOU
			,CRE_DAY
			,ARR_DAY
			,CHK
			,PASSWORD
		)VALUES(
			#{inKey}
			,#{memId}
			,#{type}
			,#{recNm}
			,#{recPhone}
			,#{recTarget}
			,#{recAddr}
			,#{recHou}
			,#{creDay}
			,#{arrDay}
			,'Y'
			,#{password}
		);		
	</insert>
	
	<!-- 관리자 배송신청 수정 -->
	<update id="adminDelUpdate" parameterType="hashmap">
		/* adminDelUpdate */
		UPDATE application
		SET		
			REC_NM = #{recNm}
			,REC_PHONE = #{recPhone} 
			,REC_TARGET = #{recTarget}
			,REC_ADDR = #{recAddr}
			,REC_HOU = #{recHou}						
			,CRE_DAY = #{creDay}
			,ARR_DAY = #{arrDay}
			,CHK = 'Y'
			,PASSWORD = #{password}
		WHERE 
			IN_KEY = #{inKey};	
	</update>
	
	<!-- 등록된 IN_KEY 여부 체크 -->
	<select id="cntInKey" parameterType="hashmap" resultType="java.lang.Integer">
		/* cntInKey */
		SELECT COUNT(*) AS cnt
		FROM application
		WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay};
	</select>
	
	<!-- 마지막 등록된 IN_KEY 값 조회 -->
	<select id="lastInKey" parameterType="hashmap" resultType="java.lang.String">
		/* lastInKey */
		SELECT IN_KEY AS inKey
		FROM application
		WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay}
		AND SUBSTR(IN_KEY, 11) = (
			SELECT MAX(cast(SUBSTR(IN_KEY,11) AS INTEGER)) 
			FROM application
			WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay}
		);
	</select>
	
	<!-- 마지막 등록된 OUT_KEY값 조회 -->
	<select id="lastOutKey" parameterType="hashmap" resultType="java.lang.String">
		/* lastOutKey */
		SELECT OUT_KEY AS outKey
		FROM sj_num
		WHERE SJ_KEY = #{sjKey}
	</select>
	
	
	<!-- 박스정보 SN 값 체크(outKey 기준) -->
	<select id="cntTotalPacketInfo" parameterType="hashmap" resultType="java.lang.Integer">
		/* cntTotalPacketInfo */
		SELECT IFNULL(MAX(SN),0) AS sn
		FROM sj_num
		WHERE OUT_KEY = #{outKey};
	</select>
	
	<!-- 박스정보 SN 값 체크(sjKey 기준) -->
	<select id="snSjKeyInfo" parameterType="hashmap" resultType="java.lang.Integer">
		/* snSjKeyInfo */
		SELECT SN AS sn
		FROM sj_num
		WHERE SJ_KEY = #{sjKey};
	</select>
	
	<!-- 박스정보 SN 값 체크(inKey 기준) -->
	<select id="snInkeyInfo" parameterType="hashmap" resultType="java.lang.Integer">
		/* snInkeyInfo */
		SELECT IFNULL(SN, 0) AS sn
		FROM sj_num
		WHERE IN_KEY = #{inKey}
		GROUP BY IN_KEY
		
		UNION ALL
		
		SELECT 0 AS sn
		FROM DUAL		
		LIMIT 1;
	</select>
	
	<!-- 등록된 sjKey 유무 체크(inKey 기준) -->
	<select id="lastSjKey" parameterType="hashmap" resultType="java.lang.String">
		/* lastSjKey */
		SELECT IFNULL(SJ_KEY, 'N') AS sjKey
		FROM sj_num
		WHERE IN_KEY = #{inKey}
		
		UNION ALL

		SELECT 'N' AS sjKey
		FROM DUAL		
		LIMIT 1;
	</select>
	
	<!-- 박스정보 등록 -->
	<insert id="packetInfoRegist" parameterType="hashmap">
		/* packetInfoRegist */
		INSERT INTO sj_num(
			SJ_KEY
			,IN_KEY
			,SN
			,OUT_KEY
			,WIDTH
			,LENGTH
			,HEIGHT
			,WEIGHT
			,COST
		)
		VALUES(
			#{sjKey}
			,#{inKey}
			,#{sn}
			,#{outKey}
			,#{width}
			,#{length}
			,#{height}
			,#{weight}
			,#{cost}
		);
	</insert>
	
	<!-- 등록된 박스정보 삭제(sjKey삭제) -->
	<delete id="packetInfoDelete" parameterType="hashmap">
		/* packetInfoDelete */
		DELETE FROM sj_num
		WHERE IN_KEY = #{inKey};
	</delete>
	
	<!-- 등록된 박스정보 삭제 - 사용 X -->
	<update id="delPacketInfo" parameterType="hashmap">
		/* delPacketInfo */
		UPDATE sj_num
		SET IN_KEY = #{outKey}
		WHERE IN_KEY = #{inKey};
	</update>
	
	
	
</mapper>