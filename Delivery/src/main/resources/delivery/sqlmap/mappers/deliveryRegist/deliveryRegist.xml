<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="delivery.B_delivery.service.impl.DeliveryRegistMapper">
	
	
	<!-- ************************** 회원파트 start!! ******************************** -->
	
	<!-- 접속한 member 정보 가져오기 -->
	<select id="memInfoList" parameterType="hashmap" resultType="hashmap">
		/* memInfoList */
		SELECT
			MEM_ID AS memId
			,NAME AS memNm
			,LEVEL AS memLv
		FROM member
		WHERE MEM_ID = #{memId};		
	</select>
	
	
	
	
	<!-- ************************** 회원파트 start!! ******************************** -->
	
	<!-- 회원 배송신청 등록 -->
	<insert id="userDelRegist" parameterType="hashmap">
		/* userDelRegist */
		INSERT INTO application(
			IN_KEY
			,MEM_ID
			,REC_NM
			,REC_PHONE
			,SUB_PHONE
			,REC_TARGET
			,REC_ADDR
			,REC_HOU
			,REC_TXT
			,GOO_COORDINATE
			,CRE_DAY
			,ARR_DAY
			,CHK
		) VALUES (
			#{inKey}
			,#{memId}
			,#{recNm}
			,#{recPhone}
			,#{subPhone}
			,#{recTarget}
			,#{recAddr}
			,#{recHou}
			,#{recTxt}
			,#{gooCoordinate}
			,#{creDay}
			,#{arrDay}
			,'N'
		);
	</insert>
	
	
	
	
	
	
	<!-- ************************** 관리자파트 start!! ******************************** -->
	
	<!-- 미완료 배송건 조회 -->
	<select id="ingDeliveryRead" parameterType="hashmap" resultType="hashmap">
		/* ingDeliveryRead */
		SELECT 
			IN_KEY AS inKey
			,MEM_ID AS memId
			,REC_NM AS recNm
			,REC_PHONE AS recPhone
			,SUB_PHONE AS subPhone
			,REC_TARGET AS recTarget
			,REC_ADDR AS recAddr
			,REC_HOU AS recHou
			,REC_TXT AS recTxt
			,GOO_COORDINATE AS gooCoordinate
			,CRE_DAY AS creDay
			,ARR_DAY AS arrDay
			,CHK AS chk
			,BIGO AS bigo
		FROM application
		WHERE IN_KEY = #{inKey};
	</select>
	
	<!-- 출항일 조회 -->
	<select id="outDayList" parameterType="hashmap" resultType="hashmap">
		/* outDayList */
		SELECT 
			OUT_KEY AS outKey
			,OUT_DAY AS outDay
			,OUT_TXT AS outTxt
		FROM out_day
		ORDER BY OUT_KEY DESC;
	</select>
	
	<!-- 택배사 조회 -->
	<select id="shipComList" parameterType="hashmap" resultType="hashmap">
		/* shipComList */
		SELECT 
			TARGET AS target
			,T_NAME AS tName
		FROM delivery_company
		WHERE USEAGE = 'Y';
	</select>
	
	<!-- 박스정보 가져오기 
		 수정1. SUBSTRING_INDEX를 활용하여 ORDER BY 정렬 반영 (240531 JANG)	-->
	<select id="packInfoList" parameterType="hashmap" resultType="hashmap">
		/* packInfoList */
		SELECT
			SJ_KEY AS sjKey
			,IN_KEY AS inKey
			,WIDTH AS width
			,LENGTH AS length
			,HEIGHT AS height
			,WEIGHT AS weight
			,COST AS cost
			,OUT_KEY AS outKey
			,SN AS sn
			,SUBSTRING_INDEX(SJ_KEY, '-', -1) AS sjIndex
		FROM sj_num
		WHERE IN_KEY = #{inKey}
		ORDER BY 
			CAST(sjIndex as INTEGER)
		ASC
	</select>
	
	
	<!-- 관리자 배송신청 등록 -->
	<insert id="adminDelRegist" parameterType="hashmap">
		/* adminDelRegist */
		INSERT INTO application(
			IN_KEY
			,MEM_ID			
			,REC_NM
			,REC_PHONE
			,SUB_PHONE
			,REC_TARGET
			,REC_ADDR
			,REC_HOU
			,REC_TXT
			,GOO_COORDINATE
			,CRE_DAY
			,ARR_DAY
			,CHK			
			,BIGO
		)VALUES(
			#{inKey}
			,#{memId}
			,#{recNm}
			,#{recPhone}
			,#{subPhone}
			,#{recTarget}
			,#{recAddr}
			,#{recHou}
			,#{recTxt}
			,#{gooCoordinate}
			,#{creDay}
			,#{arrDay}
			,'Y'
			,#{bigo}
		);		
	</insert>
	
	<!-- 관리자 배송신청 수정 -->
	<update id="adminDelUpdate" parameterType="hashmap">
		/* adminDelUpdate */
		UPDATE application
		SET		
			REC_NM = #{recNm}
			,REC_PHONE = #{recPhone}
			,SUB_PHONE = #{subPhone}
			,REC_TARGET = #{recTarget}
			,REC_ADDR = #{recAddr}
			,REC_HOU = #{recHou}
			,REC_TXT = #{recTxt}
			,GOO_COORDINATE = #{gooCoordinate}
			,CRE_DAY = #{creDay}
			,ARR_DAY = #{arrDay}
			,CHK = 'Y'
			,BIGO = #{bigo}
		WHERE 
			IN_KEY = #{inKey};
	</update>
	
	<!-- 등록된 IN_KEY 여부 체크 -->
	<select id="cntInKey" parameterType="hashmap" resultType="java.lang.Integer">
		/* cntInKey */
		SELECT COUNT(*) AS cnt
		FROM application
		WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay};
	</select>
	
	<!-- 마지막 등록된 IN_KEY 값 조회 -->
	<select id="lastInKey" parameterType="hashmap" resultType="java.lang.String">
		/* lastInKey */
		SELECT IN_KEY AS inKey
		FROM application
		WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay}
		AND SUBSTR(IN_KEY, 11) = (
			SELECT MAX(cast(SUBSTR(IN_KEY,11) AS INTEGER)) 
			FROM application
			WHERE SUBSTR(IN_KEY,3,8) = #{inKeyDay}
		);
	</select>

	<!-- 박스정보 등록 -->
	<insert id="packetInfoRegist" parameterType="hashmap">
		/* packetInfoRegist */
		INSERT INTO sj_num(
			SJ_KEY
			,IN_KEY
			,SN
			,OUT_KEY
			,WIDTH
			,LENGTH
			,HEIGHT
			,WEIGHT
			,COST
		)
		VALUES(
			#{sjKey}
			,#{inKey}
			,#{sn}
			,#{outKey}
			,#{width}
			,#{length}
			,#{height}
			,#{weight}
			,#{cost}
		);
	</insert>
	
	<!-- 등록된 박스정보 삭제(sjKey삭제) -->
	<delete id="packetInfoDelete" parameterType="hashmap">
		/* packetInfoDelete */
		DELETE FROM sj_num
		WHERE IN_KEY = #{inKey};
	</delete>
	
	
	<!-- ***************************************************************************** -->
	<!--				 				after 5 / 29 Update !!! 							-->
	<!-- ***************************************************************************** -->
	
	<!-- check inKey Count -->
	<select id="chkInKey" parameterType="hashmap" resultType="java.lang.Integer">
		/* chkInKey */
		SELECT COUNT(IN_KEY) AS cnt
		FROM application
		WHERE CRE_DAY = #{creDay};
	</select>
	<!-- check SN count (from OUT_KEY) -->
	<select id="checkSnOutKey" parameterType="hashmap" resultType="java.lang.Integer">
		/* checkSnOutKey */
		SELECT IFNULL(MAX(SN), 0) AS sn
		FROM sj_num
		WHERE OUT_KEY = #{outKey};
	</select>
	<!-- check sjKey (from IN_KEY) -->
	<select id="checkSjKey" parameterType="hashmap" resultType="java.lang.String">
		/* checkSjKey */
		SELECT SUBSTR(SJ_KEY, 1, 13) AS sjKeyHead
		FROM sj_num
		WHERE IN_KEY = #{inKey}

		UNION ALL

		SELECT 'N' AS sjKeyHead FROM DUAL

		LIMIT 1;
	</select>
		
	<!-- 수령인 조회 -->
	<select id="memberList" parameterType="hashmap" resultType="hashmap">
		/* memberList */
		SELECT 
			MEM_ID AS memId,
			NAME AS memNm,
			PHONE AS memPh
		FROM member
		WHERE LEVEL != 2
		ORDER BY NAME;
	</select>
	
	<!-- 물류접수자 level 조회 -->
	<select id="chkLevel" parameterType="hashmap" resultType="hashmap">
		/* chkLevel */
		SELECT 
			m.LEVEL AS memLevel
		FROM application a
		LEFT JOIN member m on a.MEM_ID = m.MEM_ID
		WHERE a.IN_KEY = #{inKey};		
	</select>
	
	
</mapper>